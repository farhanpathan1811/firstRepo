1. Java Package structure is not maintained well. For ex: instead of just creating CustomException, create com.test.customexception.
2. Package names are always written in all small case and no camel casing to be followed as well.
3. Do not write the main class in the service layer. Service layer is for business logic. Main class is part of super package. For ex: com.test package and service classes in com.test.service
4. Instead of using Sysouts and e.printstacktrace in code, try using logger framework and bring that to practice. For ex: Apache log4j framework. Will be useful in production ready apps
5. Take care of code formatting and add method/class level comments wherever required as in author details etc.
6. PhoneBookCollection - Line no. 22 and 28- contact.name is a bad practice to call a pojo class variable. Instead create getter/setter and use something like contact.getName()
7. PhoneBookCollection - Line no. 46 - Do proper validation before accessing collection classes. Check if phoneBookCollection is empty and return from there. These are basic validations to be taken care of and should be applied across before start of any function
8. PhoneBookCollection - Line no. 32 - Function name should follow camel casing. Here it is named as "Search" which is incorrect
9. PhoneBook - Line no. 33 - Never write a business function in if loop. Not a good practice. Check the boolean flag return from that function separately
10. PhoneBook - Line no. 67 - Return the interface rather than the implemented class of arraylist. Here return type should be List to make the return type generic from implementation.
11. Try to include the test cases and mostly follow Test Driven Development. This would ensure that the code is of high standards.